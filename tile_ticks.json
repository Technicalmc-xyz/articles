[
  {
    "children": [
      {
        "text": "Tile ticks are action sheduled to happen in a given number of ticks at a block."
      }
    ]
  },
  {
    "children": [
      {
        "text": "When the tile tick is executed,the block execute an action depending on its type."
      }
    ]
  },
  {
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "children": [
      {
        "text": "Tile tick phase:"
      }
    ],
    "type": "h2"
  },
  {
    "children": [
      {
        "text": "In this phase the game select tile ticks which have their processing tick (current tick number(world counter) when scheduled+ delay)  smaller or equal to the current tick,and executed them."
      }
    ]
  },
  {
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "children": [
      {
        "text": "Tile tick cap:"
      }
    ],
    "type": "h2"
  },
  {
    "children": [
      {
        "text": "A maximun of 65536 tile ticks can execute in one tick,the tile ticks that weren't executed are delayed to the next tick"
      }
    ]
  },
  {
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "children": [
      {
        "text": "Player input bug:"
      }
    ],
    "type": "h2"
  },
  {
    "children": [
      {
        "text": "Player input are executed after the block event phase and before the world counter increment,so if a player input create a tile tick,it will schedule a tile tick starting from a tick, and execute the block event phase only in the next tick."
      }
    ]
  },
  {
    "children": [
      {
        "text": "If the player inputs start at the end of a tick or at the beginning of the next tick is not really defined,because it depends where you split ticks"
      }
    ]
  },
  {
    "children": [
      {
        "text": "If you consider that a the player input phase happen at the begining of a tick,then tiles tick scheduled by a player input lose 1 gametick of delay"
      }
    ]
  },
  {
    "children": [
      {
        "text": "If you consider that a the player input phase happen at the end of a tick,then blockevents created by a player input will execute(extend a piston for example) only in the next tick"
      }
    ]
  },
  {
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "children": [
      {
        "text": "Tile tick priority:"
      }
    ],
    "type": "h2"
  },
  {
    "children": [
      {
        "text": "A tile tick have a priority,if some tile ticks are executed in the next tick,the tile tick with the higher priority->lower value will execute first"
      }
    ]
  },
  {
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "children": [
      {
        "text": "TILE TICK PRIORITIES",
        "code": true
      }
    ],
    "type": "h2"
  },
  {
    "children": [
      {
        "text": "NAME                    DELAY   PRIORITY(value)",
        "code": true
      }
    ]
  },
  {
    "type": "ul",
    "children": [
      {
        "children": [
          {
            "text": "Redstone Torch          2       0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Observer                2       0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Dispenser               4       0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Dropper                 4       0          ",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Command Block           1       0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Sand[6]                 2       0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Stone Button            20      0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Wooden Button           30      0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Pressure Plate          20      0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Detector rail           20      0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Tripwire Hook           10      0",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "Redstone Lamp           4       0 ",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "repeater                2",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "- facing another diode[1](repeater or comparator)?",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "             - YES -> PRIOTITY: -3",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "             - NO  -> powering?",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "                       - YES -> PRIORITY: -1 [2]",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "                       - NO  -> PRIORITY: -2",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "\t\t\t\t\t   ",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "comparator              2",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "- facing another diode**(repeater or comparator)?   ",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "             - YES -> PRIORITY: -1",
            "code": true
          }
        ],
        "type": "li"
      },
      {
        "children": [
          {
            "text": "             - NO  -> PRIORITY:  0",
            "code": true
          }
        ],
        "type": "li"
      }
    ]
  },
  {
    "children": [
      {
        "text": "[1] 'facing another diode' really means 'facing another diode that is not facing it'",
        "code": true
      }
    ]
  },
  {
    "children": [
      {
        "text": "[2] special cases  - unpowered repeater is not receiving power when ticked - PRIORITY: -2",
        "code": true
      }
    ]
  }
]